before:
  hooks:
    - go mod tidy
    - go mod download

# builds:
#   - env:
#       - CGO_ENABLED=1
#     goos:
#       - linux
#       - windows
#       # - darwin
#     goarch:
#       - amd64
#       - arm64
builds:
  # - id: lin-gui
  #   binary: pcapreplay-gui
  #   env:
  #     - CGO_ENABLED=1
  #   goos:
  #     - linux
  #   goarch:
  #     - amd64
  #     - "386"
  #   ldflags:
  #     # - -s -w -X main.version={{.Version}}
  #     - -s
  #     - -w
  - id: win-gui
    binary: pcapreplay-gui
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc
    goos:
      - windows
    goarch:
      - amd64
    ldflags:
      - -H=windowsgui
      - -s
      - -w

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  groups: # Regex use RE2 syntax as defined here: https://github.com/google/re2/wiki/Syntax.
  - title: 'Features'
    regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
    order: 100
  - title: 'Bug fixes'
    regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
    order: 200
  - title: 'Documentation'
    regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
    order: 300
  - title: 'Dependency updates'
    regexp: '^.*?(feat|fix|chore)\(deps?.+\)!?:.+$'
    order: 400
  - title: 'Other work'
    order: 999
  filters:
    exclude:
      - '^test:'
      # - '^docs:'

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
